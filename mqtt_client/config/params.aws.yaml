# YAML alias for MQTT SSL version.
# The supported values are defined at:
# https://github.com/eclipse/paho.mqtt.cpp/blob/master/src/mqtt/ssl_options.h#L305
tls_1_2: &tls_1_2 3

broker:
  # YOU MUST CHANGE THIS ENDPOINT
  # Can be found by executing: aws iot describe-endpoint
  host: not-a-real-endpoint-please-use-your-own.us-west-2.amazonaws.com
  port: 8883
  tls:
    enabled: true
    # Available at https://www.amazontrust.com/repository/AmazonRootCA1.pem
    ca_certificate: path/to/AmazonRootCA1.pem
client:
  id: user
  # Whether or not to start a clean session with each reconnect.
  # If True, the server will forget all subscriptions with each reconnect.
  # Set False to request that the server resume an existing session or start
  # a new session that may be resumed after a connection loss.
  clean_session: false
  # The keep alive value, in seconds, to send in CONNECT packet.
  keep_alive_interval: 6.0
  tls:
    # The certificate generated by the AWS IoT Core service
    certificate: path/to/a-certificate.pem
    # The private key generated by the AWS IoT Core service
    key: path/to/a-private-key.pem
    # AWS uses TLS v1.2 to encrypt all communication.
    version: *tls_1_2
    verify: true
    # https://www.openssl.org/docs/man1.1.1/man3/SSL_CTX_set_alpn_protos.html
    alpn_protos:
      # MQTT over AWS IOT requires an ALPN protocol negotiation.
      # https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html
      - x-amzn-mqtt-ca
  buffer:
    enabled: true
bridge:
  # NOTE: It seems that AWS IOT only supports primitive topics. Using non-primitive
  # types results in the error message `Connection to broker lost, will try to reconnect...`
  ros2mqtt:
    - ros_topic: /ping/primitive
      mqtt_topic: pingpong/primitive
      primitive: true
  mqtt2ros:
    - mqtt_topic: pingpong/primitive
      ros_topic: /pong/primitive
      primitive: true
